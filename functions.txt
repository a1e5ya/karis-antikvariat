1. Core Utilities (core.js)

validateItemForm(formData): Validates form data for item forms
sanitizeInput(input): Cleans user input to prevent XSS attacks
performAdvancedSearch(items, searchParams): Searches across multiple fields with filters
filterItemsByCategory(items, category): Filters items by specific category
filterItemsByPrice(items, minPrice, maxPrice): Filters items by price range
sortItems(items, sortBy, ascending): Sorts items based on various criteria
exportToCSV(items, fields): Exports inventory data to CSV format
generateInventoryReport(items): Creates comprehensive inventory statistics
formatCurrency(amount, currencySymbol): Formats prices with currency symbol
parseDate(dateString, format): Formats dates consistently
generateUniqueId(existingItems): Creates new unique IDs for items
fetchItems(params): Retrieves items with filtering, sorting, and pagination
debounce(func, wait): Limits function call frequency for performance

2. Database Management (database.js)

loadDatabaseReferences(): Loads all reference data
setupDatabaseEvents(): Sets up event handlers for database management
loadCategories(): Populates category management table
loadShelves(): Populates shelf management table
loadGenres(): Populates genre management table
loadConditions(): Populates condition management table
addDatabaseItem(type): Adds new reference item (category, shelf, etc.)
editDatabaseItem(type, id): Edits existing reference item
deleteDatabaseItem(type, id): Deletes reference item with usage check
updateDropdowns(type): Updates all dropdown menus related to a type
updateCategoryDropdowns(): Updates category dropdown menus
updateShelfDropdowns(): Updates shelf location dropdown menus
updateGenreDropdowns(): Updates genre dropdown menus
updateConditionDropdowns(): Updates condition dropdown menus
getTypeName(type): Returns Swedish name for a database type
findByName(collection, name): Generic lookup function
getCategoryByName(name), getShelfByName(name), etc.: Specific lookup functions
formatPrice(price): Formats price with Euro symbol
formatDate(dateString): Formats date according to locale

3. Authentication Module (auth.js)

isAuthenticated(): Checks if user is authenticated via session storage
showLoginModal(): Displays login dialog with form reset
showWelcomeMessage(): Displays welcome message after successful login
Event handlers for login, logout, and password reset functionality

4. Admin Interface (admin.js)

init(): Initializes admin interface and loads required components
initializeTabs(): Sets up Bootstrap tab navigation
setupEventHandlers(): Configures all event listeners for admin interface
loadInventoryItems(items): Displays items in inventory table with actions
loadListsItems(items): Displays items in lists table with selection options
searchItems(): Filters inventory based on search criteria and category
clearAddItemForm(): Resets the add item form
addNewItem(): Validates and adds new item to inventory
combineAuthorName(firstName, lastName): Combines author first and last name
editItem(id): Navigates to item edit page
sellItem(id): Marks item as sold and updates inventory
deleteItem(id): Removes item from inventory with confirmation
viewItem(id): Navigates to item details page
toggleSelectAll(): Toggles select all checkbox for lists
handlePrintList(): Prepares selected items for printing
printList(items): Opens a new window with printable list
updateNewItemImagePreview(): Updates image preview based on category
enhanceAddItemForm(): Sets up additional form behavior

5. Public Interface (public.js)

init(): Initializes public interface components
getText(key): Gets translated string based on current language
switchLanguage(lang): Changes interface language and updates UI
updateInterfaceLanguage(): Updates UI text based on selected language
loadItemDetails(itemId): Shows detailed information for a specific item
loadRelatedItems(currentItem): Displays related items based on category/author
initNewsletterForm(): Handles newsletter subscription form submissions
initLanguageSwitcher(): Sets up language switching functionality
getCategoryImage(category): Gets appropriate image based on item category
formatPrice(price): Formats price with Euro symbol
formatDate(dateString): Formats date according to locale
getUrlParameter(name): Extracts parameters from URL
initSmoothScrolling(): Enables smooth scrolling for anchor links

6. Item Page Functions (item.html, item-admin.html)

loadItemDetails(itemId): Loads item details for public view
loadItemDetailsAdmin(itemId): Loads item details for admin editing
updateImagePreview(): Updates item image based on selected category
saveItemChanges(): Saves edits to item details
confirmDeleteItem(): Confirms and processes item deletion
getCategoryImage(category): Gets appropriate image for category

7. Homepage Functions (index.html)

loadFeaturedItems(): Displays featured items on homepage
loadPublicInventory(): Displays available items in public inventory table
searchPublicInventory(): Filters public inventory based on search criteria

8. Inventory Page Functions (inventory.html)

initInventorySystem(): Initializes inventory management system
makeRowsClickable(): Makes table rows clickable
searchInventoryItems(): Searches and filters inventory items